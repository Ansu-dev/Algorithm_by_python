# 정렬
# 제한 사항
# 0 ≤ 체력, 정신력, 기술력, 방어력 ≤ 25
# 1 ≤ 기술자 수 ≤ 10
# 기술자 이름은 중복되지 않습니다.
# 기술자 배열은 2차원 배열로 주어집니다. 기술자의 이름, 체력, 정신력, 기술력, 방어력이 담긴 배열이 담긴 배열을 입력받습니다.
# 체력, 정신력, 기술력, 방어력의 총합을 구하여 점수가 높은 순으로 상위 30%의 지원자를 선발해야 합니다. 동점자가 있는 경우에도 총인원에 30%가 넘지 않도록 선발해야합니다.
# 상위 동일 점수가 30%가 넘어가는 경우에도 아무도 선발하지 못합니다.
# 기술자들의 이름은 알파벳의 역순으로 출력합니다.

# ['이름', '체력', '정신력', '기술력', '방어력'] - 25를 넘을수 없음
# [['A', 25, 24, 11, 12], ['B', 13, 22, 16, 14]]	[]
# [['A', 25, 25, 25, 25], ['B', 10, 12, 13, 11], ['C', 24, 22, 23, 21], ['D', 13, 22, 16, 14]]	['A']

# 상위 30% 높은 순으로 역순해서 출력
# 3명 미만으로 참가할 시 상위 30%가 넘으므로 아무도 선발될수 없다.
def solution(data):
    result = []
    # 3명 미만 참가는 아무도 나갈수 없다.
    if len(data) < 3:
        return []

    # 3이상 이상부턴 총인원에서 1명 선발시 30퍼가 넘어가므로 참가가능
    # 상위 30퍼가 합이 똑같아 총인원의 30퍼가 넘어갈 경우도 아무도 선발하지 않음

    return result


solution([['A', 25, 24, 11, 12], ['B', 13, 22, 16, 14]])
